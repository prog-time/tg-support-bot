---
description: VK bot development patterns and best practices
---

# VK Bot Development Guidelines

## Webhook Handling
- Use [app/Http/Controllers/VkBotController.php](mdc:app/Http/Controllers/VkBotController.php) for webhook processing
- Implement proper VK API authentication
- Handle VK's specific message format

## Message Processing
- Use [app/Services/VK/VkMessageService.php](mdc:app/Services/VK/VkMessageService.php) for sending messages
- Use [app/Services/VK/VkEditService.php](mdc:app/Services/VK/VkEditService.php) for editing messages
- Handle VK's message types and attachments

## DTOs and Data Structures
- Use [app/DTOs/Vk/VkUpdateDto.php](mdc:app/DTOs/Vk/VkUpdateDto.php) for incoming updates
- Use [app/DTOs/Vk/VkAnswerDto.php](mdc:app/DTOs/Vk/VkAnswerDto.php) for responses
- Use [app/DTOs/Vk/VkTextMessageDto.php](mdc:app/DTOs/Vk/VkTextMessageDto.php) for text messages

## File Handling
- Use [app/Actions/VK/GetMessagesUploadServerVk.php](mdc:app/Actions/VK/GetMessagesUploadServerVk.php) for file uploads
- Use [app/Actions/VK/UploadFileVk.php](mdc:app/Actions/VK/UploadFileVk.php) for file processing
- Use [app/Actions/VK/SaveFileVk.php](mdc:app/Actions/VK/SaveFileVk.php) for file storage

## API Integration
- Implement proper VK API error handling
- Use VK's long polling or webhook methods
- Handle VK's rate limiting and quotas
